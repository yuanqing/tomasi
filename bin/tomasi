#!/usr/bin/env node

'use strict';

var tomasi = require('..');
var dateformat = require('dateformat');
var isInteger = require('cheque').isInteger;
var noop = function() {};
var nopt = require('nopt');

var log = function(msg) {
  var time = dateformat('HH:MM:ss');
  console.log('tomasi · ' + time + ' · ' + msg);
};

var errCb = function(err) {
  log(err);
  process.exit(1);
};

var knownOpts = {
  serve: [Boolean, Number],
  watch: Boolean
};
var shortHands = {
  s: '--serve',
  w: '--watch'
};
var opts = nopt(knownOpts, shortHands);
var config = opts.argv.remain[0] || 'tomasi.js';

try {
  var t = tomasi(config);
} catch (err) {
  return errCb(err);
}

var build = function(cb) {
  cb = cb || noop;
  t.build(function(err) {
    log('Building...');
    if (err) {
      return errCb(err);
    }
    log('Done');
    cb();
  });
};

var watch = function() {
  var watchOpts = {
    onStart: function() {
      log('Watching...');
    },
    onChange: function(event) {
      log('File ' + event);
      log('Building...');
    }
  };
  t.watch(function(err) {
    if (err) {
      return errCb(err);
    }
    log('Done');
  }, watchOpts);
};

var serve = function() {
  var serveOpts = {
    onStart: function(port) {
      log('Serving on port ' + port);
    }
  };
  if (isInteger(opts.serve)) {
    serveOpts.port = opts.serve;
  }
  var server = t.serve(serveOpts);
  server.on('error', function(err) {
    return errCb(err);
  });
};

build(function() {
  if (opts.serve) {
    serve();
  }
  if (opts.watch) {
    watch();
  }
});
