#!/usr/bin/env node

'use strict';

var tomasi = require('..');

var _ = require('savoy');
var dateformat = require('dateformat');
var gaze = require('gaze');
var nopt = require('nopt');

var log = function(msg) {
  var time = dateformat('HH:MM:ss');
  console.log('tomasi · ' + time + ' · ' + msg);
};

var errCb = function(err) {
  log(err);
  process.exit(1);
};

var noop = function() {};

var build = function(t, cb) {
  cb = cb || noop;
  log('Building...');
  t.build(function(err) {
    if (err) return cb(err);
    log('Done');
    cb();
  });
};

try {
  var t = tomasi('tomasi.js');
} catch (err) {
  return errCb(err);
}

build(t, function(err) {
  if (err) return errCb(err);
  var argv = nopt({
    watch: Boolean
  });
  if (argv.watch) {
    var inPaths = _.fold(t.config, [], function(acc, dataTypes) {
      acc.push(dataTypes.$in);
      return acc;
    });
    var watchMsg = 'Watching...';
    gaze(inPaths, function(err, watcher) {
      if (err) return errCb(err);
      log(watchMsg);
      watcher.on('all', function(event) {
        log('file ' + event);
        build(t, function(err) {
          if (err) return errCb(err);
          log(watchMsg);
        });
      });
    });
  }
});
