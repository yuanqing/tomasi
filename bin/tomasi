#!/usr/bin/env node

'use strict';

var tomasi = require('..');

var dateformat = require('dateformat');
var nopt = require('nopt');

var log = function(msg) {
  var time = dateformat('HH:MM:ss');
  console.log('tomasi · ' + time + ' · ' + msg);
};

var errCb = function(err) {
  log(err);
  process.exit(1);
};

var opts = nopt({
  build: Boolean,
  serve: Number,
  watch: Boolean
});
var config = opts.argv.remain[0] || 'tomasi.js';

try {
  var t = tomasi(config);
} catch (err) {
  return errCb(err);
}

var build = function() {
  t.build(function(err) {
    log('Building...');
    if (err) {
      return errCb(err);
    }
    log('Done');
  });
};

var watch = function() {
  var watchOpts = {
    onStart: function() {
      log('Watching...');
    },
    onChange: function(event) {
      log('File ' + event);
      log('Building...');
    }
  };
  t.watch(function(err) {
    if (err) {
      return errCb(err);
    }
    log('Done');
  }, watchOpts);
};

var serve = function() {
  var serveOpts = {};
  serveOpts.port = opts.serve !== 1 ? opts.serve : 8080;
  log('Serving on port ' + serveOpts.port);
  t.serve(function(err) {
    if (err) {
      return errCb(err);
    }
  }, serveOpts);
};

// If neither the `watch` nor `serve` options are specified, default to build.
if (!opts.serve && !opts.watch) {
  return build();
}

if (opts.build) {
  build();
}
if (opts.serve) {
  serve();
}
if (opts.watch) {
  watch();
}
